generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum UserRole {
  ADMIN
  CLIENT
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  surname   String
  email     String   @unique
  password  String
  role      UserRole @default(CLIENT)
  createdAt DateTime @default(now())

  applications Application[]
}

model News {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime @default(now())
  imageUrl  String?
}

// model Application {
//   id            Int      @id @default(autoincrement())
//   userId    Int?
//   name          String
//   surname       String
//   email         String   @unique
//   createdAt     DateTime @default(now())
//   type          TrainingType

//   user      User?     @relation(fields: [userId], references: [id])
// }

enum TrainingType {
  INFORMATION_SCIENCE
  AGROBUSINESS
  ACCOUNTING
  MARKETING
}

model Application {
  id          Int          @id @default(autoincrement())
  userId      Int?
  name        String
  surname     String
  email       String
  phoneNumber String?
  createdAt   DateTime     @default(now())
  type        TrainingType

  user User? @relation(fields: [userId], references: [id])

  @@unique([email, type])
}

enum JobType {
  FULL_TIME
  PART_TIME
  CONTRACT
  INTERNSHIP
}

model JobListing {
  id           Int      @id @default(autoincrement())
  title        String
  company      String
  location     String
  type         JobType
  salary       String
  description  String   @db.Text
  requirements String[] @default([])
  posted       DateTime @default(now())
  updatedAt    DateTime @updatedAt
  isActive     Boolean  @default(true)
}

enum TeamMemberRole {
  EXECUTIVE_DIRECTOR // Drejtor ekzekutiv
  MEETING_COORDINATOR // Koordinator i takimeve
  BOARD_MEMBER // Pjestar i bordit
  PRESIDENT // President
}

model TeamMember {
  id          Int            @id @default(autoincrement())
  fullName    String
  role        TeamMemberRole
  description String
  title       String
  imagePath   String
  email       String?
  phoneNumber String?
  cvPath      String?
  linkedinUrl String?
  twitterUrl  String?
  facebookUrl String?
  createdAt   DateTime       @default(now())
}

enum CourseType {
  INFORMATION_SCIENCE
  AGROBUSINESS
  ACCOUNTING
  MARKETING
}

model FeaturedStudent {
  id             Int        @id @default(autoincrement())
  name           String
  surname        String
  email          String     @unique
  phoneNumber    String?
  courseType     CourseType
  score          Int
  imagePath      String?
  description    String     @db.Text
  achievements   String[]
  graduationDate DateTime
  isActive       Boolean    @default(true)
  linkedinUrl    String?
  testimonial    String?    @db.Text
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}
